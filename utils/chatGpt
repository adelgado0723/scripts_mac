#!/usr/bin/env bash

eval $(grep 'OPENAI_API_KEY' ~/.env)

LOG_FILE="$HOME/.chatgpt-tmux-log.md"

ESCAPED_API_KEY=$(printf '%q' "$OPENAI_API_KEY")

tmux neww bash -c "
export OPENAI_API_KEY=$ESCAPED_API_KEY

question=\$(gum write --placeholder 'Ask ChatGPT (powered by GPT-4o)...' --width 80 --height 10)

if [[ -z \"\$question\" ]]; then
  echo 'No question entered. Exiting...'
  sleep 1
  exit 0
fi

echo 'Sending request to OpenAI...'

# Create JSON safely
json_file=\$(mktemp)
cat > \"\$json_file\" <<EOF
{
  \"model\": \"gpt-4o\",
  \"messages\": [
    {\"role\": \"system\", \"content\": \"You are a helpful technical assistant.\"},
    {\"role\": \"user\", \"content\": \"\$question\"}
  ],
  \"temperature\": 0.7
}
EOF

response=\$(curl -sS https://api.openai.com/v1/chat/completions \\
  -H 'Content-Type: application/json' \\
  -H \"Authorization: Bearer \$OPENAI_API_KEY\" \\
  --data @\"\$json_file\")

rm -f \"\$json_file\"

if ! echo \"\$response\" | jq -e .choices[0].message.content > /dev/null 2>&1; then
  echo '❌ Failed to get a valid response from OpenAI.'
  echo \"\$response\" | jq .
  read -n 1 -s -r -p 'Press any key to exit...'
  exit 1
fi

content=\$(echo \"\$response\" | jq -r '.choices[0].message.content')

tmpfile=\$(mktemp /tmp/chatgpt_response.XXXXXX.md)
echo \"\$content\" > \"\$tmpfile\"

{
  echo '## 🧠 Question @ ' \$(date)
  echo ''
  echo \"\$question\"
  echo ''
  echo '### 💬 Response'
  echo ''
  echo \"\$content\"
  echo ''
  echo '---'
  echo ''
} >> \"$LOG_FILE\"

nvim +\"set ft=markdown\" +\"setlocal readonly\" +\"normal! gg\" \"\$tmpfile\"
"
