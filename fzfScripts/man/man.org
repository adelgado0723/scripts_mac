#+TITLE: fzfscripts
#+AUTHOR: Andy Delgado (https://github.com/adelgado0723)

* NAME
fzfscripts - a collection of various fzf scripts

* DESCRIPTION
fzfscripts are a collection of fzf scripts written in bash.  each script is written and contributed by DT or viewers.

* USAGE
** bash fzf-hub
Runs the fzf-hub program which allows for easy access to the scripts.
** bash path/to/script
Runs the script specified without using dmhub.
** ./path/to/script
Same as bash path/to/script.

* SCRIPTS
** fzf-hub
The hub script, allows easy access to other scripts.
** fzf-bookman
A bookmark searching tool, search through all qutebrowser quickmarks and bookmarks.
** fzf-colpick
Find the hex value of a color you are searching for.
** fzf-confedit
A configuration manager, find and edit any config file you need.
** fzf-currencies
Convert prices between currencies.
** fzf-docker-kill
Stop a running docker container.
** fzf-docker-rm
Remove a docker container.
** fzf-emoji
Emoji searcher, search for an emoji and copy it to the clipboard.
** fzf-icon
Fontawesome icon searcher, search for an emoji and copy it to the clipboard.
** fzf-ip
Get IP of interface or external IP
** fzf-kill
Simple process killer, find and kill misbehaving processes.
** fzf-logout
Simple logout menu, choose to lock, shutdown, reboot or logout of your computer.
** fzf-maim
A GUI to maim using fzf.
** fzf-man
A manual page searcher, search a man page or randomly view one.
** fzf-music
Fzf based music player.
** fzf-nordlayer
A fzf wrapper for nordlayer vpn
** fzf-note
Store multiple one-line texts or codes and copy one of them when needed.
** fzf-radio
Listen to online radio stations.
** fzf-record
Records audio, video and webcam.
** fzf-reddit
A reddit viewer using fzf, still a work in progress.
** fzf-setbg
Using fzf, setup a wallpaper.
** fzf-sounds
Choose an ambient background sound to play.
** fzf-tmux-cht.sh
Look up sytanx help for multiple languages and tools.
** fzf-tmux-sessionizer
Start a tmux session in a commonly visited folder.
** fzf-translate
Translate using Google Translate (through Lingva Translate)
** fzf-usbmount
USB mounting done suckless, no need for bloated daemons.
** fzf-websearch
Web searching utility using fzf.
** fzf-weather
Simple graphical weather app
** fzf-wifi
Connect to wifi using fzf.
** fzf-youtube
Youtube subscriptions without an account or the API tying you down.
** _fzf-helper.sh
Helper scripts adding functionality to other scripts

* CONFIG FILES
** /etc/fzfscripts/config
This is considered the official global config file and we do not recommend you editing it. It will be overwritten if we change the configuration so you'll need to back it up if you modify it
** ~/.config/fzfscripts/config
The first local config file is found here, this is free to modify and it is the recommended way to change the config file as it does not get overwritten. It is worth noting however that the config is still regularly modified so you will have to keep up to date on our gitlab page and read the diffs.
** Using the repo configuration
The repo can be used as is and provides a local config file. You can change it but it's change at your own risk. If you want to update the repo, for example, there may be merge conflicts. And when commiting, we expect a default config unless you are intentionally making changes to fix a bug or make an update and not to simply change something in a way you prefer.
** Using global variables
While we don't recommend it, you can choose to set some variables in other places such as the bashrc or the /etc/profile file. 
** Modifying the source
Finally, you can modify the source code to add more files to modify or to customize fzfscripts to your heart's content, please report any bugs along the way however. Confirm it on an unmodified version first and read the issues.

* CONFIGURATION
** DMENU variable
DMENU is the default variable used in fzfscripts, we expect all scripts to use DMENU in substitution of the fzf command as we want our scripts to be accessible without modifying the source code. Currently DMENU is defined in a case statement which is used to define DMENU differently depending on the script.
** Other variables
A lot of the other variables are simply program names or directories and are not worth going into further details.
** Lists
Some our config is done in a list like format. There are two syntaxes, -A and -a. 

-A uses the format of:
#+begin_example
variable[name-displayed-in-fzf]=what-it-actually-means
#+end_example

-a uses:
#+begin_example
variable=(
"thing1"
"thing2"
...
)
#+end_example


